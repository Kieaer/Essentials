plugins {
    id 'com.gradleup.shadow' version '9.0.0-beta9'
    id "com.github.node-gradle.node" version "5.0.0"
    id 'org.jetbrains.kotlin.jvm' version '2.1.10'
}

String ktor = "3.1.0"

dependencies{
    implementation "io.ktor:ktor-server-core-jvm:$ktor"
    implementation "io.ktor:ktor-server-netty-jvm:$ktor"
    implementation "io.ktor:ktor-server-content-negotiation:$ktor"
    implementation "io.ktor:ktor-serialization-jackson:$ktor"
    implementation "io.ktor:ktor-server-rate-limit:$ktor"

//    implementation "org.thymeleaf.thymeleaf:3.1.2.RELEASE"
}

jar{
    if (!file("./src/main/resources/www").exists()) {
        dependsOn("web")
    }

    from{
        configurations.runtimeClasspath.collect{it.isDirectory() ? it : zipTree(it)}
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from(rootDir){
        include "plugin.json"
    }
}

tasks.register('nodeBuild', NpmTask) {
    description = "node.js 빌드"
    group = JavaBasePlugin.BUILD_DEPENDENTS_TASK_NAME
    workingDir = file("src/www")
    args = ['run', 'build']
}

tasks.register('nodeInstall', NpmTask) {
    description = "node.js 복사"
    group = JavaBasePlugin.BUILD_DEPENDENTS_TASK_NAME
    workingDir = file("src/www")
    args = ['install']
}

tasks.register('web') {
    description = "웹 파일 빌드"
    group = JavaBasePlugin.BUILD_TASK_NAME
    def build = tasks.named("nodeBuild")
    def install = tasks.named("nodeInstall")
    if (!file('./src/www/node_modules').exists()) {
        dependsOn(install)
        dependsOn(build)
        build.mustRunAfter(install)
    } else {
        dependsOn(build)
    }

    project.delete(
            files('./src/main/resources/www')
    )
    copy {
        from('./src/www/dist')
        into('./src/main/resources/www')
    }
}